# Docker Compose file Reference (https://docs.docker.com/compose/compose-file/)
version: '3.7'
 
# Define services
services:
  mongo:
    image: mongo
    environment:
      - MONGO_INITDB_DATABASE=indigo
      - MONGO_INITDB_ROOT_USERNAME=indigo
      - MONGO_INITDB_ROOT_PASSWORD=5N27A-Bjac{=wt_3
    #volumes:
    #  - ./mongo-volume:/data/db
    ports:
      - 27017:27017
    networks: # Networks to join (Services on the same network can communicate with each other using their name)
      - indigonet      
      
  # App backend service
  indigo-backend:
    # Configuration for building the docker image for the backend service
    build:
      context: indigo-backend # Use an image built from the specified dockerfile in the `spring-boot-oauth2-social-login` directory.
      dockerfile: Dockerfile
    ports:
      - "8081:8080" # Forward the exposed port 8080 on the container to port 8080 on the host machine
    volumes:
      - C:/Calibre/EPL:/EPL
      - D:/Documentos/Programas/kindlegen_win32_v2_9:/kindlegen
    restart: always
    depends_on:
      - mongo
    networks: # Networks to join (Services on the same network can communicate with each other using their name)
      - indigonet
 
  # Frontend Service 
  indigo-frontend:
    build:
      context: indigo-frontend # Use an image built from the specified dockerfile in the `angular-11-social-login` directory.
      dockerfile: Dockerfile
      args:
        API_BASE_URL: http://127.0.0.1:8080/
    ports:
      - "8080:80" # Map the exposed port 80 on the container to port 8081 on the host machine
    restart: always
    depends_on:
      - indigo-backend
    networks:
      - indigonet  
   
# Networks to be created to facilitate communication between containers
networks:
  indigonet: 